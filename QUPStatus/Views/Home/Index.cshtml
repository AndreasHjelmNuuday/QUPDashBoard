@using DotJira;
@model ViewModel;
@{
    string colorCardBasedOnRAG(Issue issue)
    {
        string color = "white";
        if (issue.Fields.RAG != null)
        {
            if (issue.Fields.RAG.Value.Contains("Green"))
            {
                color = "green";
            }
            else if (issue.Fields.RAG.Value.Contains("Amber"))
            {

                color = "yellow";
            }
            else if (issue.Fields.RAG.Value.Contains("Red"))
            {
                color = "red";
            }
        }
        return color;
    }
}
@{
    string colorStatus(Issue issue)
    {
        String status = issue.Fields.Status.Name;
        string color = "white";
        if (status.Contains("New"))
        {
            color = "white";
        }
        else if (status.Contains("Accepted Idea"))
        {
            color = "lightgrey";
        }
        else if (status.Contains("Refinement"))
        {
            color = "Turquoise";
        }
        else if (status.Contains("In Progress"))
        {
            color = "lightgreen";
        }
        else if (status.Contains("Done"))
        {
            color = "green";
        }
        return color;
    }
}
@{
    string translateTeamName(Issue issue)
    {
        String team = "";
        switch (issue.Fields.Team)
        {
            case "427":
                team = "MOP";
                break;
            case "426":
                team = "GetOn";
                break;
            case "428":
                team = "PJ";
                break;
            case "429":
                team = "MM";
                break;
            case "581":
                team = "Guardians";
                break;
            case "454":
                team = "RAM";
                break;            
        }
        return team;
    }
}
@{
    string getChildName(Issue issue)
    {
        String child = "";
        switch (issue.Fields.Type.Name)
        {
            case "Tribe Objective":
                child = "Squad Objectives: ";
                break;
            case "Squad Objective":
                child = "Epics: ";
                break;
            case "Epic":
                child = "SubItems: ";
                break;
        }
        return child;
    }
}
<div style="position:absolute; top:0; zoom: 80%">    
    @foreach (Issue parent in Model.issues)
    {
        <div style=" display: flex; flex-wrap: nowrap; margin-top:8px;">
            <div style="
            border: solid;
            border-radius: 4px;
            margin-left: 8px;
            margin-right: 8px;
            position: relative;
            ">
                <div style="
                width: 400px;
                height: 200px;
                overflow:hidden;
                border-left: solid;
                border-left-width: 10px;
                border-color:  @colorCardBasedOnRAG(parent);
                ">

                    <div style="
                padding-left: 2px;
                background: @colorCardBasedOnRAG(parent);
                ">
                        <img src="@parent.Fields.Type.IconUrl" style="border: 1px solid black; border-radius:4px;" /> <a href="https://jira.tdc.dk/browse/@parent.Key" style="color: black; ">@parent.Key</a>
                        <!--div style="
        float: right;
        padding-right: 8px;
        ">
                @if (parent.Fields.RAG != null)
                {@parent.Fields.RAG.RemoveValueText}
            </!div-->
                    </div>
                    <div style="        background: @colorStatus(parent);
                padding-left: 2px;
                border-top: 1px solid black;
                border-bottom: 1px solid black;
                font-size: 20px;
                ">
                        @parent.Fields.Status.Name
                    </div>
                    <div style="
                padding-left: 2px;
                ">
                        <b style="font-size:20px; padding-right: 8px; ">
                            <a style="color: black;" href="/Home/Index?issueKey=@parent.Parent">
                                @parent.Fields.Summary
                            </a>
                        </b>
                    </div>
                    <div style="
                        position: absolute;
                        bottom:20px;
                        right: 2px;
                        ">
                        <a href="/Home/Index?team=@parent.Fields.Team">
                            @translateTeamName(parent)
                        </a>

                    </div>
                    <div style="position: absolute; bottom:2px; right: 2px;">
                        @getChildName(parent) @{Int32 noOfChildren = parent.Children.Count + parent.IsImplementedBy.Count;} @noOfChildren // <b style="margin-right:4px;">Done: @parent.DoneChildren</b>
                    </div>
                </div>
            </div>        
        @if (parent.Fields.Type.Name.Equals("Tribe Objective") || parent.Fields.Type.Name.Equals("Squad Objective"))
        {
            <div style="
            border: solid black;
            background-color: beige;
            width: 400px;
            border-radius: 4px;
            margin-right: 8px;
            padding-left:8px;
            font-size: 16px;
            padding-top: 4px;
            padding-right:8px;

            ">
                <b>Key Results:</b>
                <ul style="
                margin-left: 8px;
                padding-left: 20px;
                ">
                    @{

                        foreach (string keyResult in parent.Fields.SplitKeyResults())
                        {
                            <li><b>@keyResult</b></li>
                        }
                    }

                </ul>
            </div>
        }        
            @foreach (Issue child in parent.Children)
            {
                <div style="
                border: solid;
                border-radius: 4px;
                margin-right: 8px;
                position: relative;                               
                ">
                    <div style="
                    width: 250px;
                    height: 200px;
                    border-left: solid;
                    border-left-width: 10px;
                    border-color: @colorCardBasedOnRAG(child);
                    ">
                        <div style="
                        background: @colorCardBasedOnRAG(child);
                        padding-left:2px;
                        ">
                            <img src="@child.Fields.Type.IconUrl"
                                 style="border: 1px solid black;
                                    border-radius: 4px;" />
                            <a href="https://jira.tdc.dk/browse/@child.Key" style="color: black; ">@child.Key</a>
                            <!--div style="float: right; padding-right:8px;">
                            @if (child.Fields.RAG != null)
                            {@child.Fields.RAG.RemoveValueText}
                        </div>-->
                        </div>
                        <div style="
                        background:@colorStatus(child);
                        border-top: 1px solid black;
                        border-bottom: 1px solid black;
                        padding-left: 2px;
                        font-size: 20px;
                        ">
                            @child.Fields.Status.Name
                        </div>
                        <div style="padding-left:2px; ">
                            <b style="font-size: 16px; padding-right: 8px;">
                                @if (child.Fields.Type.Name.Equals("Tribe Objective") || child.Fields.Type.Name.Equals("Squad Objective"))
                                {
                                    <a style="color: black;" href="/Home/Index?issueKey=@child.Key">
                                        @child.Fields.Summary
                                    </a>
                                }
                                else
                                {
                                    @child.Fields.Summary
                                }

                            </b>
                        </div>
                        <div style="
                        position: absolute;
                        bottom:20px;
                        right: 2px;
                        ">
                            @if (child.Fields.Type.Name.Equals("Tribe Objective") || child.Fields.Type.Name.Equals("Squad Objective") )
                            {
                                <a href="/Home/Index?team=@child.Fields.Team">
                                    @translateTeamName(child)
                                </a>
                            }
                            else
                            {
                                if(child.Fields.Assignee != null) { 
                                    @child.Fields.Assignee.DisplayName
                                }
                            }

                        </div>
                        <div style="
                        position: absolute;
                        bottom:2px;
                        right: 2px;
                        ">
                            @if(child.Fields.Type.Name.Equals("Tribe Objective") || child.Fields.Type.Name.Equals("Squad Objective") || child.Fields.Type.Name.Equals("Epic"))
                            {
                                noOfChildren = child.Children.Count + child.IsImplementedBy.Count;

                            @getChildName(child)  @String.Format("{0} //", noOfChildren);  <b style="margin-right:4px;"> Done: @child.DoneChildren</b>
                            }
                        </div>
                    </div>
                </div>
                                }
        </div>    
    }
</div>
